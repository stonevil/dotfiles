{{- /*
vim:ft=tmux.gotexttmpl
*/ -}}

# vim:ft=tmux

## Shell

# Use {{ .tui.shellPath }}
set -g default-shell {{ .tui.shellPath }}

## Commands
# Use C-s as prefix
set -g prefix "C-s"
unbind-key "C-s"
bind-key "C-s" send-prefix

set -g mouse on

# Reload tmux file
bind-key -r "a" source-file $HOME/.config/tmux/tmux.conf \; display-message ' Config reloaded...'.

# Required for macOS (for 10.11 and early)
#if-shell 'test "$(uname)" = "Darwin" && type reattach-to-user-namespace' set -g default-command "reattach-to-user-namespace -l $SHELL"

# Autoinstall tpm and plugins
if-shell '[[ ! -d $HOME/.tmux/plugins/tpm ]]' {
  run-shell "git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm && $HOME/.tmux/plugins/tpm/bindings/install_plugins && tmux source-file $HOME/.config/tmux/tmux.conf"
}


## True colour
set -as terminal-features ",xterm-256color:RGB"


## Configuration
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Automatically set window title
set -g set-titles on
set -g set-titles-string '#{pane_current_path} - #{host}'

setw -g automatic-rename off
set -g renumber-windows on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Set to scrolls Vim not tmux history with mouse
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Scrollback buffer n lines
set -g history-limit 100000

# Messages are displayed for 4 seconds
set -g display-time 4000

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

set -g display-panes-time 3000

set -g focus-events on

# Rather than constraining window size to the maximum size of any client connected to the *session*, constrain window size to the maximum size of any client connected to *that window*.
setw -g aggressive-resize on

# Set Vi mode
setw -g mode-keys vi
setw -g status-keys vi

# Allow programs in the pane to bypass tmux using a terminal escape sequence
set -gq allow-passthrough on

# Manage tmux sessions resurection
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'ssh psql mysql sqlite3 man more less ansible-vault'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# tmux-sessionx
set -g @sessionx-bind 'o'
set -g @sessionx-window-mode 'on'
set -g @sessionx-layout 'reverse'
set -g @sessionx-preview-enabled 'true'
set -g @sessionx-preview-location 'bottom'
set -g @sessionx-custom-paths '{{ .chezmoi.homeDir }}/Documents,{{ .chezmoi.homeDir }}/Development'
# alt+backspace will delete the selected session
# C-u scroll preview up
# C-d scroll preview down
# C-r "read": will launch a read prompt to rename a session within the list
# C-w "window": will reload the list with all the available windows and their preview
# C-x will fuzzy read ~/.config or a configureable path of your choice (with @session-x-path)
# C-e "expand": will expand PWD and search for local directories to create additional session from
# C-b "back": reloads the first query. Useful when going into window or expand mode, to go back
# C-t "tree": reloads the preview with the tree of sessions+windows familiar from the native session manager (C-S)
# ? toggles the preview pane

## Manage sessions
#bind C-s choose-session
unbind-key "Q"
bind-key "Q" confirm-before kill-session
# tmux-plugins/tmux-sessionist
# <prefix> + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# <prefix> + C (shift + c) - prompt for creating a new session by name.
# <prefix> + X (shift + x) - kill current session without detaching tmux.
# <prefix> + S (shift + s) - switches to the last session.
# <prefix> + $ - rename session
# The same as built-in prefix + L that everyone seems to override with some other binding.
# <prefix> + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.
# <prefix> + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
# secondary-keys
#		h, -, ": join horizontally
#		v, |, %: join vertically
#		f, @: join full screen


## Manage Windows
# Create a window:
# <prefix> c          create a new window
# Switch between windows:
# <prefix> 1 ...      switch to window 1, ..., 9, 0
# <prefix> p          previous window
# <prefix> n          next window
# <prefix> l          ‘last’ (previously used) window
# <prefix> w          choose window from a list
# Switch between windows with a twist:
# <prefix> M-n        next window with a bell, activity or
# <prefix> M-p        previous such window
# Other:
# <prefix> ,          rename the current window
# <prefix> &          kill the current window


# NeoVim, WezTerm, tmux integration and unification
# navigation
set -g @tmux-nvim-navigation true
set -g @tmux-nvim-navigation-cycle true
set -g @tmux-nvim-navigation-keybinding-left 'M-Left'
set -g @tmux-nvim-navigation-keybinding-down 'M-Down'
set -g @tmux-nvim-navigation-keybinding-up 'M-Up'
set -g @tmux-nvim-navigation-keybinding-right 'M-Right'

# resize
set -g @tmux-nvim-resize true
set -g @tmux-nvim-resize-step-x 4
set -g @tmux-nvim-resize-step-y 4
set -g @tmux-nvim-resize-keybinding-left 'M-S-Left'
set -g @tmux-nvim-resize-keybinding-down 'M-S-Down'
set -g @tmux-nvim-resize-keybinding-up 'M-S-Up'
set -g @tmux-nvim-resize-keybinding-right 'M-S-Right'


bind-key "|" split-window -h -c '#{pane_current_path}'
bind-key "\\" split-window -fh -c '#{pane_current_path}'
bind-key "-" split-window -v -c '#{pane_current_path}'
bind-key "_" split-window -fv -c '#{pane_current_path}'

bind-key ";" last-window

bind-key -r "<" swap-window -t -
bind-key -r ">" swap-window -t +

unbind-key "s"
bind-key "s" choose-tree

bind-key "c" new-window -c '#{pane_current_path}'

bind-key -r "Z" resize-pane -y 40

## tmux-sessionx
# o - open fzf sessionx
# alt+backspace - will delete the selected session
# Ctrl-u - scroll preview up
# Ctrl-d - scroll preview down
# Ctrl-n - select preview up
# Ctrl-p - select preview down
# Ctrl-r - "read": will launch a read prompt to rename a session within the list
# Ctrl-w - "window": will reload the list with all the available windows and their preview
# Ctrl-x - will fuzzy read ~/.config or a configureable path of your choice (with @session-x-path)
# Ctrl-e - "expand": will expand PWD and search for local directories to create additional session from
# Ctrl-b - "back": reloads the first query. Useful when going into window or expand mode, to go back
# Ctrl-t - "tree": reloads the preview with the tree of sessions+windows familiar from the native session manager (C-S)
# Ctrl-/ - "tmuxinator": fetches a list of tmuxinator sessions and previews them
# Ctrl-g - "fzf-marks": show fzf-marks marks
# ? - toggles the preview pane


## FZF
# https://github.com/sainnhe/tmux-fzf
# prefix + F: open fzf fuzzy search window
TMUX_FZF_ORDER='session|window|pane|command|keybinding'

# fzf text completion
# press tmux prefix + tab to start extrakto fuzzy find the text/path/url/line
# press tab to insert it to the current pane,
# enter to copy it to the clipboard,
# ctrl-o to open the path/url or
# ctrl-e to edit with $EDITOR
# ctrl-f cycle extract options between word, path/url, lines
# ctrl-g cycle extract area between recent, full, window recent, window full, custom


## Copycat
# prefix + / - regex search
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search

# n - jumps to the next match
# N - jumps to the previous match


## Fuzzback
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '90%'


## Copy and Paste
set -g @shell_mode 'vi'

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

{{ if eq .chezmoi.os "darwin" }}
# Copy to macOS clipboard
set -s copy-command 'pbcopy'
{{ else if eq .chezmoi.os "linux" }}
# Copy to X11/Wayland clipboard
if-shell '[[ $(XDG_SESSION_TYPE) = wayland ]' {
	set -s copy-command 'wl-copy -n'
} {
	set -s copy-command 'xclip'
}
{{ end -}}

# Buffers
bind-key "b" list-buffers  # list paste buffers
bind-key "p" paste-buffer  # paste from the top paste buffer
bind-key "P" choose-buffer # choose which buffer to paste from

# Pevent yank from scrolling to the bottom of your buffer after copying
set -g @yank_action "copy-pipe"


## Themes
# Status update interval
set -g status-interval 5

# Pane
set -g pane-border-status off
set -g pane-border-style fg=colour12
set -g pane-active-border-style fg=colour11
set -g pane-border-format "#{pane_index} /#{pane_current_command} #{pane_current_path}"

# set -g window-style bg=$background
# set -g window-active-style bg=$background

# Window List
setw -g window-status-separator "  "
setw -g window-status-style fg=colour8,bg=default
setw -g window-status-current-style fg=colour12,bg=default
setw -g window-status-format "#I /#W"
setw -g window-status-current-format "#I /#W"

# Messages
set -g message-style fg=colour7
set -g message-command-style fg=colour7,bg=default

# Status
set -g status on
set -g status-justify left
set -g status-position top
set -g status-style fg=default,bg=default

set -g status-left-length 100
set -g status-right-length 200

time_format="%R"
date_format="%d/%m/%Y"

set -g status-left-style fg=colour7,bg=default
set -g status-left "#[fg=colour0,bg=colour12,bold] #S #[fg=colour12,bg=default,nobold,nounderscore,noitalics]  #[fg=colour11,bg=default]"

set -g status-right-style fg=colour7,bg=default
set -g status-right "#{prefix_highlight} #[fg=colour0,bg=default,nobold,nounderscore,noitalics] #(gitmux #{pane_current_path}) #[fg=colour11,bg=default,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour11,bold,nounderscore,noitalics] #{pane_current_path}#[fg=colour0,bg=colour11,nobold,nounderscore,noitalics] #[fg=colour12,bg=colour0,nobold,nounderscore,noitalics] ${date_format} #[fg=colour0,bg=colour12,nobold,nounderscore,noitalics] ${time_format} "


## tmux plugins manager
# List of plugins
set -g @tpm_plugins '                \
  tmux-plugins/tpm                   \
  tmux-plugins/tmux-sessionist       \
  tmux-plugins/tmux-sensible         \
  tmux-plugins/tmux-copycat          \
  tmux-plugins/tmux-resurrect        \
  tmux-plugins/tmux-prefix-highlight \
  omerxx/tmux-sessionx               \
	aserowy/tmux.nvim                  \
'
# List of disabled plugins
# tmux-plugins/tmux-battery          \
# tmux-plugins/tmux-pain-control     \
# stonevil/tmux-vm-status            \
# stonevil/tmux-hostname-status      \
# stonevil/tmux-wan-status           \
# stonevil/tmux-lan-status           \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
