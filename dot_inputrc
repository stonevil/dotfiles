# Initialization file for readline

# TODO
# 1. Extensive test
# 2. Cleanup

# Do not bell on tab-completion
set bell-style none

# 8 bit
set meta-flag on
set input-meta on
set output-meta on

# To allow the use of 8bit-characters like the german umlauts
set convert-meta off

# Enable vi editing mode
set editing-mode vi

# Keymaps for when we're in insert
set keymap vi-insert
# Keymaps for when we're in command mode
set keymap vi-command

# Mode indicator in prompt
set show-mode-in-prompt on

# Disabling control echo
set echo-control-characters off

# Different cursor shapes for each mode
$if term=linux
	set vi-ins-mode-string \1\e[?0c\2
	set vi-cmd-mode-string \1\e[?8c\2
$else
	set vi-ins-mode-string \1\e[6 q\2
	set vi-cmd-mode-string \1\e[2 q\2
$endif

# Color files by types. Note that this may cause completion text blink in some terminals (e.g. xterm).
set colored-stats on
# Append char to indicate type
set visible-stats on
# Mark symlinked directories
set mark-symlinked-directories on
# Color the common prefix
set colored-completion-prefix on
# Color the common prefix in menu-complete
set menu-complete-display-prefix on

# Show all completions as soon as I press TAB, even if there's more than one
set show-all-if-ambiguous on
# Shift-TAB cycles completions backward
"\e[Z": menu-complete-backward
# On menu-complete, first display the common prefix, then cycle through the options when hitting TAB
set menu-complete-display-prefix on

# Ignore case
set completion-ignore-case on

# Completed names which are symbolic links to directories have a slash appended.
set mark-symlinked-directories on

# Insert the arguments from the last command
"p": "i !!*\r"
# Needed because binding 'p' in command mode above wipes its insert mode function, too. This fixes that, and will insert 'p' when you type 'p'.
"p": self-insert

# Edit options before rerunning previous command, eg: ls a b c -> ls -al a b c
"\C-o": "\e-0eli "

# Cycle thru completions.
"\C-a": menu-complete

# Glob patterns without executing, eg: 'rm *x'
"\C-e": glob-expand-word

# Vim style history search
"\e[A": history-search-backward
"\e[B": history-search-forward

#"\e[C": forward-char
#"\e[D": backward-char

# Two escapes clear command line. (Use C-c or \eC\eC instead)
"\e\e": "\e0\C-ki"
