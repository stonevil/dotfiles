# vim:ft=gotexttmpl

# chezmoi.toml hash: {{ include (joinPath ".chezmoi.toml.tmpl") | sha256sum }}


# Common
{{- range .fonts.nerd.fontsList }}
{{ if eq $.chezmoi.os "darwin" }}
["Library/Fonts/{{ . }}"]
{{- else if eq $.chezmoi.os "linux" }}
[".local/share/fonts/{{ . }}"]
{{ end }}
	type = "archive"
	refreshPeriod = "24h"
	url = "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{ . }}.zip"
	include = ["*.ttf", "*.otf"]
{{ end -}}

[".local/antigen.zsh"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://git.io/antigen"

[".local/bin/chezmoi"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .libc.platform "musl" }}
	url = "https://github.com/twpayne/chezmoi/releases/latest/download/chezmoi-{{ .chezmoi.os }}-{{ .chezmoi.arch }}-{{ .libc.platform }}"
{{- else }}
	url = "https://github.com/twpayne/chezmoi/releases/latest/download/chezmoi-{{ .chezmoi.os }}-{{ .chezmoi.arch }}"
{{- end }}

{{ if eq .chezmoi.os "darwin" }}
	{{- if eq .chezmoi.arch "amd64" }}
[".local/bin/bat"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/sharkdp/bat/releases/download/v{{ .tools.bat.version }}/bat-v{{ .tools.bat.version }}-x86_64-apple-darwin.tar.gz"
	[".local/bin/bat".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "bat-v{{ .tools.bat.version }}-x86_64-apple-darwin/bat"]
	{{- end }}
{{- else if eq .chezmoi.os "linux" }}
[".local/bin/bat"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/sharkdp/bat/releases/download/v{{ .tools.bat.version }}/bat-v{{ .tools.bat.version }}-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-{{ .libc.platform }}.tar.gz"
	[".local/bin/bat".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "bat-v{{ .tools.bat.version }}-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-{{ .libc.platform }}/bat"]
{{- end }}

[".local/bin/fzf"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/junegunn/fzf/releases/download/{{ .tools.fzf.version }}/fzf-{{ .tools.fzf.version }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.zip"
	[".local/bin/fzf".filter]
		command = "zcat"
{{- else if eq .chezmoi.os "linux" }}
	url = "https://github.com/junegunn/fzf/releases/download/{{ .tools.fzf.version }}/fzf-{{ .tools.fzf.version }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/fzf".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "fzf"]
{{- end }}

[".local/bin/xplr"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.arch "amd64" }}
	{{- if eq .chezmoi.os "darwin" }}
		url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-macos.tar.gz"
	{{- else if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "alpine")) }}
		url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux-musl.tar.gz"
	{{- else if (and (eq .chezmoi.os "linux") (not .chezmoi.osRelease.id "alpine")) }}
		url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux.tar.gz"
	{{ end }}
{{ else if eq .chezmoi.arch "arm64" }}
	{{- if eq .chezmoi.os "darwin" }}
		url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-macos-{{ .arch.opt2 }}.tar.gz"
	{{- else if eq .chezmoi.os "linux" }}
		url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux-{{ .arch.opt2 }}.tar.gz"
	{{ end }}
{{- end }}
	[".local/bin/xplr".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "xplr"]

[".local/bin/zellij"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/zellij-org/zellij/releases/latest/download/zellij-{{ .arch.opt2 }}-apple-{{ .chezmoi.os }}.tar.gz"
{{- else if eq .chezmoi.os "linux" }}
	url = "https://github.com/zellij-org/zellij/releases/latest/download/zellij-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-musl.tar.gz"
{{- end }}
	[".local/bin/zellij".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "zellij"]


# DevOps
{{ if eq .tags.devops true }}
[".lima/default/lima.yaml"]
	type = "file"
	refreshPeriod = "168h"
	executable = false
	url = "https://raw.githubusercontent.com/lima-vm/lima/master/examples/default.yaml"

[".lima/docker/lima.yaml"]
	type = "file"
	refreshPeriod = "168h"
	executable = false
	url = "https://raw.githubusercontent.com/lima-vm/lima/master/examples/docker.yaml"

[".lima/podman/lima.yaml"]
	type = "file"
	refreshPeriod = "168h"
	executable = false
	url = "https://raw.githubusercontent.com/lima-vm/lima/master/examples/podman.yaml"

[".lima/k3s/lima.yaml"]
	type = "file"
	refreshPeriod = "168h"
	executable = false
	url = "https://raw.githubusercontent.com/lima-vm/lima/master/examples/k3s.yaml"

[".lima/fedora/lima.yaml"]
	type = "file"
	refreshPeriod = "168h"
	executable = false
	url = "https://raw.githubusercontent.com/lima-vm/lima/master/examples/fedora.yaml"

[".local/bin/helm"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://get.helm.sh/helm-v{{ .tools.helm.version }}-{{ .chezmoi.os }}-{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/helm".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "{{ .chezmoi.os }}-{{ .chezmoi.arch }}/helm"]

[".local/bin/kubectl"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://storage.googleapis.com/kubernetes-release/release/v{{ .tools.kubectl.version }}/bin/{{ .chezmoi.os }}/{{ .chezmoi.arch }}/kubectl"

[".local/bin/krew"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/krew".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "./krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}"]
{{- end }}


# Common Dev and DevOps
{{ if (or .tags.dev .tags.devops) }}
[".local/bin/lazygit"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.arch "amd64" }}
	url = "https://github.com/jesseduffield/lazygit/releases/download/v{{ .tools.lazygit.version }}/lazygit_{{ .tools.lazygit.version }}_{{ .chezmoi.os | title }}_{{ .arch.opt2 }}.tar.gz"
{{- else if eq .chezmoi.arch "arm64"}}
	url = "https://github.com/jesseduffield/lazygit/releases/download/v{{ .tools.lazygit.version }}/lazygit_{{ .tools.lazygit.version }}_{{ .chezmoi.os | title }}_{{ .arch.opt1 }}.tar.gz"
{{- end }}
	[".local/bin/lazygit".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazygit"]

[".local/bin/lazydocker"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.arch "amd64" }}
	url = "https://github.com/jesseduffield/lazydocker/releases/download/v{{ .tools.lazydocker.version }}/lazydocker_{{ .tools.lazydocker.version }}_{{ .chezmoi.os | title }}_{{ .arch.opt2 }}.tar.gz"
{{- else if eq .chezmoi.arch "arm64"}}
	url = "https://github.com/jesseduffield/lazydocker/releases/download/v{{ .tools.lazydocker.version }}/lazydocker_{{ .tools.lazydocker.version }}_{{ .chezmoi.os | title }}_{{ .arch.opt1 }}.tar.gz"
{{- end }}
	[".local/bin/lazydocker".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazydocker"]
{{- end }}


{{ if eq .tags.dev true }}
# TODO
{{- end }}


# Embedded Dev
{{ if eq .tags.embedded true -}}
[".local/esp-idf"]
	type = "git-repo"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/espressif/esp-idf.git"
	[".local/esp-idf".pull]
		args = ["--recurse-submodules=true"]
{{- end }}
