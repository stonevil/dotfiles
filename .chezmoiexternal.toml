# vim:ft=toml

# chezmoi.toml hash: {{ include (joinPath ".chezmoi.toml.tmpl") | sha256sum }}


# Common
{{ if or (eq .chezmoi.os "darwin") (and (eq .chezmoi.os "linux") (or (eq .session.type "wayland") (eq .session.type "x11") (eq .session.type "xorg"))) }}
	{{- range .fonts.nerd.fontsList }}
		{{ if eq $.chezmoi.os "darwin" -}}
["Library/Fonts/{{ . }}"]
		{{- else if eq $.chezmoi.os "linux" }}
[".local/share/fonts/{{ . }}"]
		{{ end }}
	type = "archive"
	refreshPeriod = "24h"
	url = "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{ . }}.zip"
	include = ["*.ttf", "*.otf"]
	{{ end }}
{{ end }}

[".local/antigen.zsh"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://git.io/antigen"

{{ $chezmoi_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/twpayne/chezmoi/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/chezmoi"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	{{ if (eq .chezmoi.os "darwin") }}
	url = "https://github.com/twpayne/chezmoi/releases/download/v{{ $chezmoi_v }}/chezmoi_{{ $chezmoi_v }}_{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	{{ else if (and (eq .chezmoi.os "linux") (eq .chezmoi.arch "amd65") (eq .chezmoi.libc.platform "musl")) }}
	url = "https://github.com/twpayne/chezmoi/releases/download/v{{ $chezmoi_v }}/chezmoi_{{ $chezmoi_v }}_{{ .chezmoi.os }}-{{ .libc.platform }}_{{ .chezmoi.arch }}.tar.gz"
	{{ else if (eq .chezmoi.os "linux") }}
	url = "https://github.com/twpayne/chezmoi/releases/download/v{{ $chezmoi_v }}/chezmoi_{{ $chezmoi_v }}_{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	{{ end }}
	[".local/bin/chezmoi".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "chezmoi"]

{{ $bat_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/sharkdp/bat/releases/latest" | trim | base | trimPrefix "v" }}
{{ if eq .chezmoi.os "darwin" -}}
	{{- if eq .chezmoi.arch "amd64" }}
[".local/bin/bat"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/sharkdp/bat/releases/download/v{{ $bat_v }}/bat-v{{ $bat_v }}-x86_64-apple-darwin.tar.gz"
	[".local/bin/bat".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "bat-v{{ $bat_v }}-x86_64-apple-darwin/bat"]
	{{- end }}
{{- else if eq .chezmoi.os "linux" }}
[".local/bin/bat"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/sharkdp/bat/releases/download/v{{ $bat_v }}/bat-v{{ $bat_v }}-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-{{ .libc.platform }}.tar.gz"
	[".local/bin/bat".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "bat-v{{ $bat_v }}-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-{{ .libc.platform }}/bat"]
{{- end }}

{{ $fzf_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/junegunn/fzf/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/fzf"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/junegunn/fzf/releases/download/{{ $fzf_v }}/fzf-{{ $fzf_v }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.zip"
{{- else if eq .chezmoi.os "linux" }}
	url = "https://github.com/junegunn/fzf/releases/download/{{ $fzf_v }}/fzf-{{ $fzf_v }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
{{- end }}
	[".local/bin/fzf".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "fzf"]

[".local/bin/fzf-tmux"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-tmux"

[".local/bin/xplr"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.arch "amd64" }}
	{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-macos.tar.gz"
	{{- else if (and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "alpine")) }}
	url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux-musl.tar.gz"
	{{- else if (and (eq .chezmoi.os "linux") (ne .chezmoi.osRelease.id "alpine")) }}
	url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux.tar.gz"
	{{ end }}
{{ else if eq .chezmoi.arch "arm64" }}
	{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-macos-{{ .arch.opt2 }}.tar.gz"
	{{- else if eq .chezmoi.os "linux" }}
	url = "https://github.com/sayanarijit/xplr/releases/latest/download/xplr-linux-{{ .arch.opt2 }}.tar.gz"
	{{ end }}
{{- end }}
	[".local/bin/xplr".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "xplr"]

[".local/bin/zellij"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
{{- if eq .chezmoi.os "darwin" }}
	url = "https://github.com/zellij-org/zellij/releases/latest/download/zellij-{{ .arch.opt2 }}-apple-{{ .chezmoi.os }}.tar.gz"
{{- else if eq .chezmoi.os "linux" }}
	url = "https://github.com/zellij-org/zellij/releases/latest/download/zellij-{{ .arch.opt2 }}-unknown-{{ .chezmoi.os }}-musl.tar.gz"
{{- end }}
	[".local/bin/zellij".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "zellij"]


{{ $github_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/cli/cli/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/gh"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/cli/cli/releases/download/v{{ $github_v }}/gh_{{ $github_v }}_{{ if eq .chezmoi.os "darwin"}}macOS{{ else if eq .chezmoi.os "linux" }}linux{{ end }}_{{ .chezmoi.arch }}.{{ if eq .chezmoi.os "darwin"}}zip{{ else if eq .chezmoi.os "linux" }}tar.gz{{ end }}"
	[".local/bin/gh".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "gh_{{ $github_v }}_{{ if eq .chezmoi.os "darwin"}}macOS{{ else if eq .chezmoi.os "linux" }}linux{{ end }}_{{ .chezmoi.arch }}/bin/gh"]

# DevOps
{{ $helm_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/helm/helm/releases/latest" | trim | base | trimPrefix "v" }}
{{ if .tags.devops -}}
[".local/bin/helm"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://get.helm.sh/helm-v{{ $helm_v }}-{{ .chezmoi.os }}-{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/helm".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "{{ .chezmoi.os }}-{{ .chezmoi.arch }}/helm"]

[".local/bin/kubectl"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://storage.googleapis.com/kubernetes-release/release/v1.28.9/bin/{{ .chezmoi.os }}/{{ .chezmoi.arch }}/kubectl"

[".local/bin/krew"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/krew".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "./krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}"]
{{- end }}


# Common Dev and DevOps
{{ if (or .tags.dev .tags.devops) -}}
{{ $lazygit_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/jesseduffield/lazygit/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/lazygit"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	{{- if eq .chezmoi.arch "amd64" }}
	url = "https://github.com/jesseduffield/lazygit/releases/download/v{{ $lazygit_v }}/lazygit_{{ $lazygit_v }}_{{ .chezmoi.os | title }}_{{ .arch.opt2 }}.tar.gz"
	{{- else if eq .chezmoi.arch "arm64"}}
	url = "https://github.com/jesseduffield/lazygit/releases/download/v{{ $lazygit_v }}/lazygit_{{ $lazygit_v }}_{{ .chezmoi.os | title }}_{{ .arch.opt1 }}.tar.gz"
	{{- end }}
	[".local/bin/lazygit".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazygit"]

{{ $lazydocker_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/jesseduffield/lazydocker/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/lazydocker"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	{{- if eq .chezmoi.arch "amd64" }}
	url = "https://github.com/jesseduffield/lazydocker/releases/download/v{{ $lazydocker_v }}/lazydocker_{{ $lazydocker_v }}_{{ .chezmoi.os | title }}_{{ .arch.opt2 }}.tar.gz"
	{{- else if eq .chezmoi.arch "arm64"}}
	url = "https://github.com/jesseduffield/lazydocker/releases/download/v{{ $lazydocker_v }}/lazydocker_{{ $lazydocker_v }}_{{ .chezmoi.os | title }}_{{ .arch.opt1 }}.tar.gz"
	{{- end }}
	[".local/bin/lazydocker".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazydocker"]
{{- end }}


{{ if eq .tags.dev true -}}
# TODO
{{- end }}


# Embedded Dev
{{ if eq .tags.embedded true -}}
[".local/esp-idf"]
	type = "git-repo"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/espressif/esp-idf.git"
	[".local/esp-idf".pull]
		args = ["--recurse-submodules=true"]
{{- end }}
