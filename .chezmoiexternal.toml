# vim:ft=toml

# chezmoi.toml hash: {{ include (joinPath ".chezmoi.toml.tmpl") | sha256sum }}


# Common
{{ if or (eq .chezmoi.os "darwin") (and (eq .chezmoi.os "linux") (or (eq .session.type "wayland") (eq .session.type "x11") (eq .session.type "xorg"))) }}
	{{- range .terminal.fontsList }}
		{{ if eq $.chezmoi.os "darwin" -}}
["Library/Fonts/{{ . }}"]
		{{- else if eq $.chezmoi.os "linux" }}
[".local/share/fonts/{{ . }}"]
		{{ end }}
	type = "archive"
	refreshPeriod = "24h"
	url = "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{ . }}.zip"
	include = ["*.ttf", "*.otf"]
	{{ end }}
{{ end }}

{{ $chezmoi_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/twpayne/chezmoi/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/chezmoi"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/twpayne/chezmoi/releases/download/v{{ $chezmoi_v }}/chezmoi-{{ .chezmoi.os }}-{{ .chezmoi.arch }}"

{{ $fzf_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/junegunn/fzf/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/fzf"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/junegunn/fzf/releases/download/v{{ $fzf_v }}/fzf-{{ $fzf_v }}-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/fzf".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "fzf"]

[".local/bin/fzf-tmux"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-tmux"

{{ range $k, $v := $.zsh.pluginsList }}
[".local/zsh/plugins/{{ $k }}"]
	type = "git-repo"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/{{ $v }}/{{ $k }}.git"
{{ end }}

[".local/bin/zellij"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/zellij-org/zellij/releases/latest/download/zellij-{{ .arch.opt2 }}-{{ if eq .chezmoi.os "darwin" }}apple-{{ .chezmoi.os }}{{ else if eq .chezmoi.os "linux" }}unknown-{{ .chezmoi.os }}-musl{{ end }}.tar.gz"
	[".local/bin/zellij".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "zellij"]


{{ $github_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/cli/cli/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/gh"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/cli/cli/releases/download/v{{ $github_v }}/gh_{{ $github_v }}_{{ if eq .chezmoi.os "darwin"}}macOS{{ else if eq .chezmoi.os "linux" }}linux{{ end }}_{{ .chezmoi.arch }}.{{ if eq .chezmoi.os "darwin"}}zip{{ else if eq .chezmoi.os "linux" }}tar.gz{{ end }}"
	[".local/bin/gh".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "gh_{{ $github_v }}_{{ if eq .chezmoi.os "darwin"}}macOS{{ else if eq .chezmoi.os "linux" }}linux{{ end }}_{{ .chezmoi.arch }}/bin/gh"]


{{ $xplr_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/sayanarijit/xplr/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/xplr"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/sayanarijit/xplr/releases/download/v{{ $xplr_v }}/xplr-{{ if eq .chezmoi.os "darwin" }}macos{{ else if eq .chezmoi.os "linux" }}linux{{ end }}{{ if eq .chezmoi.arch "arm64" }}-aarch64{{ end }}.tar.gz"
	[".local/bin/xplr".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "xplr"]

{{ $carapace_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/carapace-sh/carapace-bin/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/carapace"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/carapace-sh/carapace-bin/releases/download/v{{ $carapace_v }}/carapace-bin_{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/carapace".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "carapace"]


{{ if (or .tags.dev .tags.devops) -}}
# Common Dev and DevOps
{{ $lazygit_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/jesseduffield/lazygit/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/lazygit"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/jesseduffield/lazygit/releases/download/v{{ $lazygit_v }}/lazygit_{{ $lazygit_v }}_{{ .chezmoi.os | title }}_{{ if eq .chezmoi.arch "amd64" }}{{ .arch.opt2 }}{{ else if eq .chezmoi.arch "arm64" }}{{ .arch.opt1 }}{{ end }}.tar.gz"
	[".local/bin/lazygit".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazygit"]

{{ $lazydocker_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/jesseduffield/lazydocker/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/lazydocker"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/jesseduffield/lazydocker/releases/download/v{{ $lazydocker_v }}/lazydocker_{{ $lazydocker_v }}_{{ .chezmoi.os | title }}_{{ if eq .chezmoi.arch "amd64" }}{{ .arch.opt2 }}{{ else if eq .chezmoi.arch "arm64" }}{{ .arch.opt1 }}{{ end }}.tar.gz"
	[".local/bin/lazydocker".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "lazydocker"]
{{- end }}


{{ if .tags.devops -}}
#Â DevOps
{{ $helm_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/helm/helm/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/helm"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://get.helm.sh/helm-v{{ $helm_v }}-{{ .chezmoi.os }}-{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/helm".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "{{ .chezmoi.os }}-{{ .chezmoi.arch }}/helm"]

[".local/bin/kubectl"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://storage.googleapis.com/kubernetes-release/release/v1.28.9/bin/{{ .chezmoi.os }}/{{ .chezmoi.arch }}/kubectl"

[".local/bin/krew"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/krew".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "./krew-{{ .chezmoi.os }}_{{ .chezmoi.arch }}"]
{{- end }}


{{ if eq .tags.dev true -}}
# TODO
{{- end }}


{{ if eq .tags.deck true -}}
# Presentation tools
{{ $slides_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/maaslalani/slides/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/slides"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/maaslalani/slides/releases/download/v{{ $slides_v }}/slides_{{ $slides_v }}_{{ .chezmoi.os }}_{{ .chezmoi.arch }}.tar.gz"
	[".local/bin/slides".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "slides"]

{{ $presenterm_v := output "curl" "-fsSL" "-o" "/dev/null" "-w" "%{url_effective}" "https://github.com/mfontanini/presenterm/releases/latest" | trim | base | trimPrefix "v" }}
[".local/bin/presenterm"]
	type = "file"
	refreshPeriod = "168h"
	executable = true
	stripComponents = 1
	url = "https://github.com/mfontanini/presenterm/releases/download/v{{ $presenterm_v }}/presenterm-{{ $presenterm_v }}-{{ if eq .chezmoi.arch "amd64" }}x86_64{{ else if eq .chezmoi.arch "arm64" }}aarch64{{ end }}{{ if eq .chezmoi.os "darwin" }}-apple-darwin{{ else if eq .chezmoi.os "linux" }}-unknown-linux-gnu{{ end }}.tar.gz"
	[".local/bin/presenterm".filter]
		command = "tar"
		args = ["--extract", "--file", "/dev/stdin", "--gzip", "--to-stdout", "presenterm-{{ $presenterm_v }}/presenterm"]
{{- end }}


{{ if eq .tags.embedded true -}}
# Embedded Dev
[".local/esp-idf"]
	type = "git-repo"
	refreshPeriod = "168h"
	executable = true
	url = "https://github.com/espressif/esp-idf.git"
	[".local/esp-idf".pull]
		args = ["--recurse-submodules=true"]
{{- end }}
